from collections.abc import Callable, Iterable
from typing import Any, NoReturn, TypeVar, overload
from typing_extensions import SupportsIndex, TypeAlias

_T = TypeVar("_T")

xrange = range

class BarrelList(list[_T]):
    lists: list[list[_T]]
    @overload
    def __init__(self, iterable: Iterable[_T]) -> None: ...
    @overload
    def __init__(self, iterable: None) -> None: ...
    def insert(self, index: SupportsIndex, item: _T) -> None: ...
    def append(self, item: _T) -> None: ...
    def extend(self, iterable: Iterable[_T]) -> None: ...
    def pop(self, *a) -> _T | NoReturn: ...
    def iter_slice(self, start: int, stop: int, step: int | None = ...): ...
    @overload
    def del_slice(self, index: int) -> None: ...  # Updated
    @overload
    def del_slice(self, index: slice) -> None: ...  # Updated
    __delslice__ = del_slice
    @classmethod
    def from_iterable(cls, it): ...
    def __iter__(self): ...
    def __reversed__(self): ...
    def __len__(self) -> int: ...
    def __contains__(self, item: object) -> bool: ...
    @overload
    def __getitem__(self, index: SupportsIndex) -> _T: ...  # Updated
    @overload
    def __getitem__(self, index: slice) -> list[_T]: ...  # Updated
    def __delitem__(self, index: SupportsIndex | slice) -> None: ...  # Updated
    @overload
    def __setitem__(self, index: SupportsIndex, item: _T) -> None: ...
    @overload
    def __setitem__(self, index: slice, item: Iterable[_T]) -> None: ...
    def __getslice__(self, start: int, stop: int): ...
    def __setslice__(self, start: int, stop: int, sequence: int) -> None: ...
    def sort(self, *, key: Callable[[_T], Any] | None = ..., reverse: bool = False) -> None: ...
    def reverse(self) -> None: ...
    def count(self, item: _T) -> int: ...
    def index(self, item: _T, start: SupportsIndex = ..., end: SupportsIndex = ...) -> int: ...

BList: TypeAlias = BarrelList[_T]

class SplayList(list[_T]):
    def shift(self, item_index: int, dest_index: int = ...) -> None: ...
    def swap(self, item_index: int, dest_index: int) -> None: ...
