from _typeshed import Incomplete

# unicode = str

def construct_format_field_str(fname: str, fspec: str, conv: str) -> str: ...
def infer_positional_format_args(fstr: str) -> str: ...
def get_format_args(fstr: str): ...
def tokenize_format_str(fstr, resolve_pos: bool = ...): ...

class BaseFormatField:
    def __init__(self, fname, fspec: str = ..., conv: Incomplete | None = ...) -> None: ...
    base_name: Incomplete
    fname: Incomplete
    subpath: Incomplete
    is_positional: Incomplete
    def set_fname(self, fname) -> None: ...
    subfields: Incomplete
    fspec: Incomplete
    type_char: Incomplete
    type_func: Incomplete
    def set_fspec(self, fspec) -> None: ...
    conv: Incomplete
    conv_func: Incomplete
    def set_conv(self, conv) -> None: ...
    @property
    def fstr(self): ...

class DeferredValue:
    func: Incomplete
    cache_value: Incomplete
    def __init__(self, func, cache_value: bool = ...) -> None: ...
    def get_value(self): ...
    def __int__(self): ...
    def __float__(self): ...
    def __unicode__(self): ...
    def __format__(self, fmt): ...
