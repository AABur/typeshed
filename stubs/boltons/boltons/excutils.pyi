from _typeshed import Incomplete
from typing import NamedTuple

class ExceptionCauseMixin(Exception):
    cause: Incomplete
    def __new__(cls, *args, **kw): ...
    def get_str(self): ...

class _BaseTBItem(NamedTuple):
    filename: Incomplete
    lineno: Incomplete
    name: Incomplete
    line: Incomplete

class _TBItem(_BaseTBItem): ...

class _DeferredLine:
    filename: Incomplete
    lineno: Incomplete
    module_globals: Incomplete
    def __init__(self, filename, lineno, module_globals: Incomplete | None = ...) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __len__(self): ...
    def strip(self): ...

class MathError(ExceptionCauseMixin, ValueError): ...
